<section id="vocabularyDefinitionSection">
<h1>Information Model</h1>
<!-- h1>Vocabulary</h1 -->

  <section>
  <h2>Overview</h2>

  <p>
  The W3C Thing Description provides a set of vocabulary for describing 
  physical and virtual Things. 
  To increase interoperability  
  the vocabulary terms are defined using the 
  Resource Description Framework (RDF).  
  <span class="rfc2119-assertion" id="td-vocabulary">
  All vocabulary restrictions noted in these tables MUST be followed,
  including mandatory items and default values.
  </span></p>

  <p>
  In general, the Thing Description vocabulary set is grouped in three modules: 
  the core Thing Description vocabulary reflecting WoT's paradigm of 
  <code>Properties</code>, <code>Actions</code>, 
  and <code>Events</code> (also see [[!WOT-ARCHITECTURE]]);
  the data schema vocabulary reflecting a subset of JSON Schema terms in a 
  linked data representation; 
  and the security vocabulary used to define security mechanism
  configuration requirements.
  </p>
 
  <p>
  An overview of this vocabulary with its class context and class relation 
  is given by the following three figures: the TD core model, 
  the TD data schema model, and the TD security model. 
  Please note that the figures reflect the vocabulary terms and structure 
  as they would be used in a Thing Description 
  instance 
  (see see <a href="#TD-serialization-section" class="sec-ref"><span class="secno">6.</span> <span class="sec-title">Thing Description Serialization</span></a>). 
  The full ontology definitions of the different modules 
  can be viewed by following the namespaces as provided in Section 
  <a href="#namespaces" class="sec-ref"><span class="secno">3.</span> <span class="sec-title">Namespaces</span></a>.
  </p>
  <!--<p><a href="http://visualdataweb.de/webvowl/#iri=https://rawgit.com/w3c/wot-thing-description/TD-JSON-LD-1.1/ontology/td.ttl">Click here for the visualization</a></p>-->
 
<figure id="td-core-model">
  <img src="td-core-model/td-core-model.svg" alt="TD core model figure"/>
  <figcaption>TD core model</figcaption>
</figure>

<figure id="td-data-schema-model">
  <img src="td-core-model/td-data-schema-model.svg" alt="TD data schema model figure"/>
  <figcaption>TD data schema model</figcaption>
</figure>

<figure id="td-security-model">
  <img src="td-core-model/td-security-model.svg" alt="TD security model figure"/>
  <figcaption>TD security model</figcaption>
</figure>

  <p class="ednote" title="Default Values and Mandatory Attributes">
  In the figures above, and in the tables to follow, 
  items which have default values are indicated as being optional. 
  However, technically, 
  these are optional <em>only in the JSON serialization</em>. 
  They are actually mandatory parts of the 
  information model and are also mandatory in the JSON-LD serialization. 
  In addition, the security scheme configuration is not actually optional even 
  in the JSON serialization.  Security configuration is mandatory 
  at least one of the three levels at which it may be specified... so it can 
  be omitted only if it is specified at a different level for each form. 
  A future version of this document should better express the status of these attributes. 
  </p>

  <p>A detailed description of the vocabulary of the TD core model and 
  TD data schema model is given in the next sub-section.</p>

  </section>

  <section id="sec-core-vocabulary-definition">
  <h2>Core Vocabulary Definition</h2>

    {#coreClasses}

    {>class/}

    {/coreClasses}

  <p class="ednote" title="Allowable rel Values in Forms">
  In forms, the <code>rel</code> attribute must be one of  
  <code>readproperty</code>, 
  <code>writeproperty</code>, 
  <code>observeproperty</code>, 
  <code>invokeaction</code>, 
  <code>subscribeevent</code>, 
  or <code>unsubscribeevent</code>. 
  The value of rel is not restricted in the same way in links.
  </p>
    
    
  </section>

  <section id="sec-data-schema-vocabulary-definition">
  <h2>Data Schema Vocabulary Definition</h2>

    {#schemaClasses}

    {>class/}
    
    {/schemaClasses}
    
  </section>

  <section id="sec-security-vocabulary-definition">
  <h2>Security Vocabulary Definition</h2>

  <p class="ednote" title="Security Metadata Sources">
  The set of security metadata supported by the core TD vocabulary is 
  still under discussion.  
  For the core vocabulary the focus is on well-established security  
  mechanisms, such as those built into protocols supported by WoT  
  or already in wide use with those protocols.  
  Note that the vocabulary extension mechanism of the 
  WoT Thing Description allows for additional security schemes if needed.  
  The current set of security schemes is partly based on 
  <a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md#securitySchemeObject">OpenAPI 3.0.1</a>.  
  The security schemes, 
  vocabulary and syntax given in this specification share many similarities 
  with OpenAPI; however, it is not fully compatible.  
  Also, as OpenAPI targets only web services built around HTTP it does not 
  cover the full set of use cases required for the IoT.  
  Therefore, we are currently discussing metadata supporting additional 
  security mechanisms for IoT-centered protocols such as CoAP and MQTT.  

  For more information about what security schemes are under discussion 
  (and to file issues if you have a request) please visit the 
  <a href="https://github.com/w3c/wot-security">WoT Security TF repository.</a>
  </p>

    {#securityClasses}
    
    {>class/}
    
    {/securityClasses}
    
  </section>

</section>
